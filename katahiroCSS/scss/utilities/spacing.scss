@use '../abstracts/functions.scss' as function;
@use '../abstracts/variables.scss' as variable;

@for $i from 1 through 25 {

  .m-#{$i}  { margin: function.multiply($i, variable.$unit3); }
  .mx-#{$i} { margin-left: function.multiply($i, variable.$unit3); margin-right: function.multiply($i, variable.$unit3); }
  .my-#{$i} { margin-top: function.multiply($i, variable.$unit3); margin-bottom: function.multiply($i, variable.$unit3); }
  .mt-#{$i} { margin-top: function.multiply($i, variable.$unit3); }
  .mb-#{$i} { margin-bottom: function.multiply($i, variable.$unit3); }
  .ml-#{$i} { margin-left: function.multiply($i, variable.$unit3); }
  .mr-#{$i} { margin-right: function.multiply($i, variable.$unit3); }

  .p-#{$i}  { padding: function.multiply($i, variable.$unit3); }
  .px-#{$i} { padding-left: function.multiply($i, variable.$unit3); padding-right: function.multiply($i, variable.$unit3); }
  .py-#{$i} { padding-top: function.multiply($i, variable.$unit3); padding-bottom: function.multiply($i, variable.$unit3); }
  .pt-#{$i} { padding-top: function.multiply($i, variable.$unit3); }
  .pb-#{$i} { padding-bottom: function.multiply($i, variable.$unit3); }
  .pl-#{$i} { padding-left: function.multiply($i, variable.$unit3); }
  .pr-#{$i} { padding-right: function.multiply($i, variable.$unit3); }

  .z-#{$i} { z-index: $i; }


  @each $breakpoint, $value in variable.$breakpoints {
    @media (min-width: #{$value}) {

      .m-#{$breakpoint}-#{$i}  { margin: function.multiply($i, variable.$unit3); }
      .mx-#{$breakpoint}-#{$i} { margin-left: function.multiply($i, variable.$unit3); margin-right: function.multiply($i, variable.$unit3); }
      .my-#{$breakpoint}-#{$i} { margin-top: function.multiply($i, variable.$unit3); margin-bottom: function.multiply($i, variable.$unit3); }
      .mt-#{$breakpoint}-#{$i} { margin-top: function.multiply($i, variable.$unit3); }
      .mb-#{$breakpoint}-#{$i} { margin-bottom: function.multiply($i, variable.$unit3); }
      .ml-#{$breakpoint}-#{$i} { margin-left: function.multiply($i, variable.$unit3); }
      .mr-#{$breakpoint}-#{$i} { margin-right: function.multiply($i, variable.$unit3); }

      .p-#{$breakpoint}-#{$i}  { padding: function.multiply($i, variable.$unit3); }
      .px-#{$breakpoint}-#{$i} { padding-left: function.multiply($i, variable.$unit3); padding-right: function.multiply($i, variable.$unit3); }
      .py-#{$breakpoint}-#{$i} { padding-top: function.multiply($i, variable.$unit3); padding-bottom: function.multiply($i, variable.$unit3); }
      .pt-#{$breakpoint}-#{$i} { padding-top: function.multiply($i, variable.$unit3); }
      .pb-#{$breakpoint}-#{$i} { padding-bottom: function.multiply($i, variable.$unit3); }
      .pl-#{$breakpoint}-#{$i} { padding-left: function.multiply($i, variable.$unit3); }
      .pr-#{$breakpoint}-#{$i} { padding-right: function.multiply($i, variable.$unit3); }

      .z-#{$breakpoint}-#{$i} { z-index: $i; }
    }
  }
}

@for $i from -25 through 0 {
  .m-#{$i}  { margin: function.multiply($i, variable.$unit3); }
  .mx-#{$i} { margin-left: function.multiply($i, variable.$unit3); margin-right: function.multiply($i, variable.$unit3); }
  .my-#{$i} { margin-top: function.multiply($i, variable.$unit3); margin-bottom: function.multiply($i, variable.$unit3); }
  .mt-#{$i} { margin-top: function.multiply($i, variable.$unit3); }
  .mb-#{$i} { margin-bottom: function.multiply($i, variable.$unit3); }
  .ml-#{$i} { margin-left: function.multiply($i, variable.$unit3); }
  .mr-#{$i} { margin-right: function.multiply($i, variable.$unit3); }

  .p-#{$i}  { padding: function.multiply($i, variable.$unit3); }
  .px-#{$i} { padding-left: function.multiply($i, variable.$unit3); padding-right: function.multiply($i, variable.$unit3); }
  .py-#{$i} { padding-top: function.multiply($i, variable.$unit3); padding-bottom: function.multiply($i, variable.$unit3); }
  .pt-#{$i} { padding-top: function.multiply($i, variable.$unit3); }
  .pb-#{$i} { padding-bottom: function.multiply($i, variable.$unit3); }
  .pl-#{$i} { padding-left: function.multiply($i, variable.$unit3); }
  .pr-#{$i} { padding-right: function.multiply($i, variable.$unit3); }
}